#!/bin/bash

########################################
# Preliminary data setup step
########################################
set -xa

<<<<<<< HEAD

export cycle=t${cyc}z 

export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}

export DATA_IN=${DATA_IN:-$DATAROOT}
export pid=$$
jobid=evs_${MODELNAME}_${VERIF_CASE}_${STEP}.$$
export DATA=${DATA:-$DATA_IN/${jobid}}
mkdir -p $DATA
cd $DATA

setpdy.sh
. $DATA/PDY

if [ $MODELNAME = href ] ; then
 if [ $VERIF_CASE = grid2obs ] ; then
   export VDATE=${VDATE:-$PDYm1}
 elif [ $VERIF_CASE = precip ] ; then
   export VDATE=${VDATE:-$PDYm2}
 fi
fi


export COMIN=${COMIN:-$(compath.py  $NET/$evs_ver)}
export COMINhref=${COMINhref:-$(compath.py  href/$href_ver)}
export COMINprepbufr=${COMINprepbufr:-$(compath.py  obsproc/${obsproc_ver})}
export COMINccpa=${COMINccpa:-$(compath.py  ccpa/${ccpa_ver})}
export COMINsnow=$DCOMROOT
export COMINmrms=$DCOMROOT/ldmdata/obs/upperair/mrms/alaska/MultiSensorQPE


export COMOUT=${COMOUT:-$(compath.py -o ${NET}/${evs_ver})}/$STEP/$COMPONENT
mkdir -p $COMOUT

export COMOUTfinal=${COMOUT}/${MODELNAME}.${VDATE}
export COMOUTsmall=${COMOUT}/${RUN}.${VDATE}/${MODELNAME}/${VERIF_CASE}
mkdir -p $COMOUTfinal $COMOUTsmall
=======

# ###################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + '
date

###########################################################
# obtain unique LSF id (jobid) and make temp directories
###########################################################

export pid=$$

export DATA=${DATA:-${DATAROOT:?}/${jobid:?}}
mkdir -p $DATA
cd $DATA
####################################
# Determine Job Output Name on System
####################################
export pgmout="OUTPUT.${pid}"

export cycle=t${cyc}z
##################################################
# SAVEGES  - Copy Files From TMPDIR to $GESdir
# SENDECF  - Flag Events on ecFLOW
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
##################################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}
>>>>>>> upstream/develop


export HOMEevs=${HOMEevs:-${PACKAGEROOT}/evs.${evs_ver}}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export FIXvevs=${FIXevs:-$HOMEevs/fix}
export PARMevs=${PARMevs:-$HOMEevs/parm}
export USHevs=${USHevs:-$HOMEevs/ush}
export FIXevs=${FIXevs:-/lfs/h1/ops/prod/packages/evs.${evs_ver}/fix}
export MASKS=${MASKS:-$FIXevs/masks} 

<<<<<<< HEAD
export pid=$$
jobid=evs_${MODELNAME}_${VERIF_CASE}_${STEP}.$$
export DATA=${DATA:-$DATA_IN/${jobid}}
mkdir -p $DATA
cd $DATA
=======
# Define COMIN/COMOUT variables:

export COMIN=${COMIN:-$(compath.py ${envir}/com/evs/${evs_ver}/)}
export COMINnam=${COMINnam:-$(compath.py ${envir}/com/${modsys}/${mod_ver})}
export COMINobs=${COMINobs:-$(compath.py ${envir}/com/obsproc/${obsproc_ver})}
export COMOUT=${COMOUT:-$(compath.py ${NET}/${evs_ver}/${STEP}/${COMPONENT}/${RUN})}
export COMOUTsmall=${COMOUTsmall:-$(compath.py ${NET}/${evs_ver}/${STEP}/${COMPONENT}/${RUN}.${VDATE}/${MODELNAME}/${VERIF_CASE})}
export COMOUTfinal=${COMOUTfinal:-$(compath.py ${NET}/${evs_ver}/${STEP}/${COMPONENT}/${MODELNAME}.${VDATE})}
mkdir -m 775 -p  $COMOUT
>>>>>>> upstream/develop


<<<<<<< HEAD
export pgmout="OUTPUT.${pid}"
=======
$HOMEevs/scripts/${COMPONENT}/${STEP}/exevs_${MODELNAME}_${VERIF_CASE}_${STEP}.sh
>>>>>>> upstream/develop

$HOMEevs/scripts/${COMPONENT}/${STEP}/exevs_${MODELNAME}_${VERIF_CASE}_${STEP}.sh

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$msg"

if [ "$KEEPDATA" != "YES" ] ; then
  cd $DATAROOT
<<<<<<< HEAD
  rm -rf $DATA
fi

=======
 rm -rf $DATA
 fi
    #if [ "$KEEPDATA" != "YES" ] ; then
    #  cd $DATAROOT
    #  rm -rf $DATA
    #fi
>>>>>>> upstream/develop
