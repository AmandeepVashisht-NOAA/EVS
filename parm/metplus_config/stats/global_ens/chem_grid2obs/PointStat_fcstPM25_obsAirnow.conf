[config]

OUTPUT_BASE = {ENV[finalstat]}

###############################################################################
# METplus Configuration                                                       #
#   See the METplus User's Guide System Configuration section                 #
#   for more information about each of these variables.                       #
###############################################################################


###############################################################################
# MET Installation Location                                                   #
#   * Set MET_INSTALL_DIR to the path where MET is installed                  #
#   * Change MET_BIN_DIR to {MET_INSTALL_DIR}/exec if necessary               #
###############################################################################

METPLUS_BASE = {ENV[MET_PLUS_PATH]}
MET_INSTALL_DIR = {ENV[MET_PATH]}
MET_BIN_DIR = {ENV[MET_PATH]}/bin
METPLUS_PARM_BASE = {METPLUS_BASE}/parm
METPLUS_FIX = {METPLUS_BASE}/fix

###############################################################################
# Input/Output Information                                                    #
#   * Set INPUT_BASE to the directory that contains input data                #
#   * Set OUTPUT_BASE to the directory to write output files                  #
#   * Change other variables to write certain files outside of OUTPUT_BASE    #
#   * Rename metplus_final.conf config file if desired                        #
###############################################################################


METPLUS_CONF = {ENV[DATA]}/config/{ENV[COMPONENT]}/metplus_final.conf

TMP_DIR = {ENV[DATA]}/tmp/{ENV[COMPONENT]}

STAGING_DIR = {ENV[DATA]}/stage/{ENV[COMPONENT]}


###############################################################################
# Non-MET Executables                                                         #
#   * Set CONVERT to the full path of the ImageMagick utility if it is not    #
#     in the user's path                                                      #
#   * Set GEMPAKTOCF_JAR to the full path of the jar file if processing       #
#     GEMPAK data                                                             #
###############################################################################

CONVERT = convert

GEMPAKTOCF_JAR = GempakToCF.jar


###############################################################################
# Log File Information (Where to write logs files)                            #
###############################################################################

LOG_DIR = {ENV[DATA]}/logs/{ENV[COMPONENT]}

LOG_METPLUS = {LOG_DIR}/metplus.log.{LOG_TIMESTAMP_TEMPLATE}

LOG_TIMESTAMP_TEMPLATE = %Y%m%d%H%M%S


# List of applications to run - only PointStat for this case
PROCESS_LIST = PB2NC, PointStat

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set

LOOP_BY = VALID

# Format of INIT_BEG and INIT_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH

VALID_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match INIT_TIME_FMT

VALID_BEG = {ENV[VDATE]}

# End time for METplus run - must match INIT_TIME_FMT

VALID_END = {ENV[VDATE]}

# Increment between METplus runs (in seconds if no units are specified)
#  Must be >= 60 seconds

VALID_INCREMENT = 3H

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)

LEAD_SEQ = 0, 3, 6, 9, 12, 15, 18, 21

# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
LOOP_ORDER = processes

PB2NC_SKIP_IF_OUTPUT_EXISTS = no
PB2NC_OBS_WINDOW_BEGIN = -86400
PB2NC_OBS_WINDOW_END = 86400

PB2NC_GRID = G212
PB2NC_POLY =
PB2NC_STATION_ID =
PB2NC_MESSAGE_TYPE =

# Leave empty to process all
PB2NC_OBS_BUFR_VAR_LIST = COPOPM

FCST_VAR1_NAME = PMTF
FCST_VAR1_LEVELS = [R025]
#FCST_VAR1_THRESH =  >=0.1, >=0.4, >=1.0
#FCST_VAR1_OPTIONS = 

OBS_VAR1_NAME= COPOPM
OBS_VAR1_LEVELS= A1
OBS_VAR1_OPTIONS =  convert(x) = x * 10^9;

# Verbosity of MET output - overrides LOG_VERBOSITY for PointStat only
##LOG_POINT_STAT_VERBOSITY = 2

##PointStat Settings
# https://metplus.readthedocs.io/en/latest/Users_Guide/wrappers.html#pointstat
# ###
#
LOG_POINT_STAT_VERBOSITY = 4

LOG_LEVEL = DEBUG
PB2NC_CONFIG_FILE={PARM_BASE}/met_config/PB2NCConfig_wrapped
POINT_STAT_CONFIG_FILE = {PARM_BASE}/met_config/PointStatConfig_wrapped

POINT_STAT_MESSAGE_TYPE = ANOWPM
POINT_STAT_POLY = {ENV[MASK_DIR]}/Bukovsky_G148_CONUS.nc, {ENV[MASK_DIR]}/Bukovsky_G148_CONUS_East.nc, {ENV[MASK_DIR]}/Bukovsky_G148_CONUS_West.nc, {ENV[MASK_DIR]}/Bukovsky_G148_CONUS_South.nc, {ENV[MASK_DIR]}/Bukovsky_G148_CONUS_Central.nc, {ENV[MASK_DIR]}/Bukovsky_G148_Appalachia.nc, {ENV[MASK_DIR]}/Bukovsky_G148_CPlains.nc, {ENV[MASK_DIR]}/Bukovsky_G148_DeepSouth.nc, {ENV[MASK_DIR]}/Bukovsky_G148_GreatBasin.nc, {ENV[MASK_DIR]}/Bukovsky_G148_GreatLakes.nc, {ENV[MASK_DIR]}/Bukovsky_G148_Mezquital.nc, {ENV[MASK_DIR]}/Bukovsky_G148_MidAtlantic.nc, {ENV[MASK_DIR]}/Bukovsky_G148_NorthAtlantic.nc, {ENV[MASK_DIR]}/Bukovsky_G148_NPlains.nc, {ENV[MASK_DIR]}/Bukovsky_G148_NRockies.nc, {ENV[MASK_DIR]}/Bukovsky_G148_PacificNW.nc, {ENV[MASK_DIR]}/Bukovsky_G148_PacificSW.nc, {ENV[MASK_DIR]}/Bukovsky_G148_Prairie.nc, {ENV[MASK_DIR]}/Bukovsky_G148_Southeast.nc, {ENV[MASK_DIR]}/Bukovsky_G148_Southwest.nc, {ENV[MASK_DIR]}/Bukovsky_G148_SPlains.nc, {ENV[MASK_DIR]}/Bukovsky_G148_SRockies.nc

POINT_STAT_OUTPUT_FLAG_SL1L2 = STAT
POINT_STAT_OUTPUT_FLAG_VL1L2 = STAT
POINT_STAT_OUTPUT_FLAG_CTC = STAT

POINT_STAT_INTERP_TYPE_METHOD = BILIN
POINT_STAT_INTERP_TYPE_WIDTH = 2

POINT_STAT_REGRID_TO_GRID = NONE
POINT_STAT_REGRID_METHOD = BILIN
POINT_STAT_REGRID_WIDTH = 2

MODEL = GEFS
POINT_STAT_OUTPUT_PREFIX = {ENV[MODELNAME]}

POINT_STAT_OUTPUT_PREFIX = {MODEL}_{OBTYPE}_{outtyp}

[dir]
PB2NC_INPUT_DIR = {ENV[COMINobsproc]}

PB2NC_OUTPUT_DIR = {OUTPUT_BASE}/{ENV[RUNnow]}

FCST_POINT_STAT_INPUT_DIR = {ENV[COMINgefs]}

OBS_POINT_STAT_INPUT_DIR = {PB2NC_OUTPUT_DIR}

POINT_STAT_OUTPUT_DIR = {OUTPUT_BASE}/{ENV[RUNnow]}/{ENV[VDATE]}

[filename_templates]
PB2NC_INPUT_TEMPLATE = hourly.{da_init?fmt=%Y%m%d?shift=86400}/aqm.t12z.anowpm.pb.tm024

FCST_POINT_STAT_INPUT_TEMPLATE = {ENV[MODELNAME]}.{lead?fmt=%Y%m%d}/{ENV[mdl_cyc]}/{ENV[RUN]}/pgrb2ap25/{ENV[MODELNAME]}.{ENV[RUN]}.{cycle}.a2d_0p25.f{lead?fmt=%3H}.grib2

PB2NC_OUTPUT_TEMPLATE = prepbufr.{ENV[outtyp]}.{valid?fmt=%Y%m%d%H}.nc
OBS_POINT_STAT_INPUT_TEMPLATE = {PB2NC_OUTPUT_TEMPLATE}

POINT_STAT_OUTPUT_TEMPLATE = {valid?fmt=%Y%m%d}.stat
