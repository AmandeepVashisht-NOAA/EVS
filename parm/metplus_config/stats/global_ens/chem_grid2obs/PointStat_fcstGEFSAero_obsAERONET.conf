[config]

OUTPUT_BASE = {ENV[DATA]}

METPLUS_FIX = {METPLUS_BASE}/fix

METPLUS_CONF = {OUTPUT_BASE}/config/{ENV[COMPONENT]}/metplus_final_{ENV[MODELNAME]}_{ENV[RUN]}_{ENV[OBTTYPE]}.conf

LOG_METPLUS = {LOG_DIR}/metplus_{ENV[MODELNAME]}_{ENV[RUN]}_{ENV[OBTTYPE]}.log.{LOG_TIMESTAMP_TEMPLATE}

# List of applications to run - only PointStat for this case
PROCESS_LIST = PointStat

MODEL = {ENV[model1]}

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set

LOOP_BY = VALID

# Format of INIT_BEG and INIT_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH

VALID_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match INIT_TIME_FMT

VALID_BEG = {ENV[VDATE]}

# End time for METplus run - must match INIT_TIME_FMT

VALID_END = {ENV[VDATE]}

# Increment between METplus runs (in seconds if no units are specified)
#  Must be >= 60 seconds

VALID_INCREMENT = 3H

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)

LEAD_SEQ = 0, 3, 6, 9, 12, 15, 18, 21

# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
LOOP_ORDER = times

FCST_VAR1_NAME = AOTK
FCST_VAR1_LEVELS = A0
#FCST_VAR1_THRESH =  >=0.1, >=0.4, >=1.0
FCST_VAR1_OPTIONS = GRIB2_process=62000;GRIB2_ipdtmpl_index = [ 2, 10 ]; GRIB2_ipdtmpl_val = [ 62000, 545 ]

OBS_VAR1_NAME = AOD
OBS_VAR1_LEVELS = Z550
###OBS_VAR1_THRESH = >=0.1, >=0.4, >=1.0
OBS_VAR1_OPTIONS =  message_type = "AERONET_AOD"; censor_thresh = [ <=0.0 ]; censor_val=[ 0.0 ];

# Verbosity of MET output - overrides LOG_VERBOSITY for PointStat only
##LOG_POINT_STAT_VERBOSITY = 2

##PointStat Settings
POINT_STAT_CONFIG_FILE = {PARM_BASE}/met_config/PointStatConfig_wrapped

POINT_STAT_OUTPUT_FLAG_CTC = STAT
POINT_STAT_OUTPUT_FLAG_CTS = STAT
POINT_STAT_OUTPUT_FLAG_CNT = STAT
POINT_STAT_OUTPUT_FLAG_SL1L2 = STAT
POINT_STAT_OUTPUT_FLAG_SAL1L2 = STAT
OBS_POINT_STAT_WINDOW_BEGIN = -1800
OBS_POINT_STAT_WINDOW_END = 1800
#OBS_WINDOW_BEGIN = -3600
#OBS_WINDOW_END = 3600
POINT_STAT_MET_CONFIG_OVERRIDES = obs_summary = UW_MEAN;

POINT_STAT_OFFSETS = 0
POINT_STAT_ONCE_PER_FIELD = False

POINT_STAT_OUTPUT_PREFIX = {ENV[MODELNAME]}
POINT_STAT_DESC = NA

MODEL = {ENV[model1]}
OBTYPE = {ENV[OBTTYPE]}

POINT_STAT_OUTPUT_PREFIX = {ENV[MODELNAME]}_{OBTYPE}_{ENV[outtype]} ## _aod

POINT_STAT_REGRID_TO_GRID = NONE
POINT_STAT_REGRID_METHOD = BILIN
POINT_STAT_REGRID_WIDTH = 2

POINT_STAT_MESSAGE_TYPE = AERONET_AOD

POINT_STAT_MASK_GRID = FULL
POINT_STAT_MASK_POLY = 
POINT_STAT_MASK_SID =

[dir]
FCST_POINT_STAT_INPUT_DIR = {ENV[COMINgefs]}

OBS_POINT_STAT_INPUT_DIR = {ENV[EVSINgefs]}

POINT_STAT_OUTPUT_DIR = {ENV[finalstat]}/{ENV[OBTTYPE]}/{ENV[VDATE]}

LOG_DIR = {OUTPUT_BASE}/logs/{ENV[COMPONENT]}


[filename_templates]
FCST_POINT_STAT_INPUT_TEMPLATE = {ENV[MODELNAME]}.{lead?fmt=%Y%m%d}/{ENV[mdl_cyc]}/{ENV[RUN]}/pgrb2ap25/{ENV[MODELNAME]}.{ENV[RUN]}.{cycle}.a2d_0p25.f{lead?fmt=%3H}.grib2

OBS_POINT_STAT_INPUT_TEMPLATE = {ENV[RUN]}.{valid?fmt=%Y%m%d}/{ENV[MODELNAME]}/{ENV[OBTTYPE]}_All_{valid?fmt=%Y%m%d}_lev15.nc

POINT_STAT_OUTPUT_TEMPLATE = {ENV[VDATE]}.stat
