# Series Analysis METplus Configuration

# section heading for [config] variables - all items below this line and
# before the next section heading correspond to the [config] section

[config]

OUTPUT_BASE = {ENV[DATA]}

METPLUS_CONF = {OUTPUT_BASE}/config/{ENV[COMPONENT]}/metplus_final_{ENV[MODELNAME]}_{ENV[RUN]}_{ENV[OBTTYPE]}.conf

LOG_METPLUS = {LOG_DIR}/metplus_{ENV[MODELNAME]}_{ENV[RUN]}_{ENV[OBTTYPE]}.log.{LOG_TIMESTAMP_TEMPLATE}

# List of applications to run
PROCESS_LIST = SeriesAnalysis

MODEL = {ENV[model1]}

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set

LOOP_BY = VALID

# Format of VALID_BEG and VALID_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH

VALID_TIME_FMT = %Y%m%d_%H%M%S

# Start time for METplus run - must match VALID_TIME_FMT

VALID_BEG={ENV[vlddate]}{ENV[vldhr]}

# End time for METplus run - must match VALID_TIME_FMT

VALID_END={ENV[vlddate]}{ENV[vldhr]}

# Increment between METplus runs (in seconds if no units are specified)
#  Must be >= 60 seconds
VALID_INCREMENT = 3H

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = {ENV[fcsthours]}

# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run

LOOP_ORDER = times

# Location of MET config file to pass to SeriesAnalysis
SERIES_ANALYSIS_CONFIG_FILE = {PARM_BASE}/met_config/SeriesAnalysisConfig_wrapped

# set the desc value in the SeriesAnalysis MET config file
SERIES_ANALYSIS_DESC = NA

SERIES_ANALYSIS_OUTPUT_PREFIX = {ENV[MODELNAME]}_{ENV[OBTTYPE]}_TAOD

# List of variables to compare in SeriesAnalysis - FCST_VAR1 variables correspond
#  to OBS_VAR1 variables
# Note [FCST/OBS/BOTH]_SERIES_ANALYSIS_VAR<n>_NAME can be used instead if different evaluations
# are needed for different tools

# Name of forecast variable 1
FCST_VAR1_NAME = AOTK

# List of levels to evaluate for forecast variable 1
# (*,*) is NetCDF notation - must include quotes around these values!
FCST_VAR1_LEVELS = "A0"

# Set forecast lead and level information for the stat files
FCST_VAR1_OPTIONS = GRIB2_process=62000;GRIB2_ipdtmpl_index = [ 2, 10 ]; GRIB2_ipdtmpl_val = [ 62000, 545 ]

# List of thresholds to evaluate for each name/level combination for both
#  forecast and observation variable 1
#BOTH_VAR1_THRESH =

# Name of observation variable 1
OBS_VAR1_NAME = AOD_H_Quality

# List of levels to evaluate for observation variable 1
# must be the same length as FCST_VAR1_LEVELS
OBS_VAR1_LEVELS = "(*,*)"

# List of thresholds to evaluate for each name/level combination for
#  observation variable 1
#OBS_VAR1_THRESH =

# Reset observation valid time and level
OBS_VAR1_OPTIONS = 

# Time relative to valid time (in seconds) to allow files to be considered
#  valid. Set both BEGIN and END to 0 to require the exact time in the filename
FCST_SERIES_ANALYSIS_FILE_WINDOW_BEGIN = 0
FCST_SERIES_ANALYSIS_FILE_WINDOW_END = 0
OBS_SERIES_ANALYSIS_FILE_WINDOW_BEGIN = 0
OBS_SERIES_ANALYSIS_FILE_WINDOW_END = 0

# Set to true to run SeriesAnalysis separately for each field specified
# Set to false to create one run of SeriesAnalysis per run time that
#   includes all fields specified.
SERIES_ANALYSIS_ONCE_PER_FIELD = False

# grid to remap data. Value is set as the 'to_grid' variable in the 'regrid' dictionary
# See MET User's Guide for more information
SERIES_ANALYSIS_REGRID_TO_GRID = G004
SERIES_ANALYSIS_REGRID_METHOD = NEAREST
SERIES_ANALYSIS_REGRID_WIDTH = 2
SERIES_ANALYSIS_REGRID_VLD_THRESH = 0.002
SERIES_ANALYSIS_REGRID_VLD_SHAPE = SQUARE

# Set up verification regions
# Keep SERIES_ANALYSIS_MASK_GRID empty to remove the FULL domain in stat files
SERIES_ANALYSIS_MASK_GRID = FULL
SERIES_ANALYSIS_MASK_POLY = {METPLUS_FIX)/G004_GLOBAL.nc,{METPLUS_FIX)/G004_CONUS.nc

# Set to true if observation data is probabilistic
#  Only used if configuring forecast data as the 'OBS' input
OBS_IS_PROB = false

# Only used if OBS_IS_PROB is true - sets probabilistic threshold
OBS_SERIES_ANALYSIS_PROB_THRESH = 

# Set up output files
SERIES_ANALYSIS_OUTPUT_FLAG_CTC = STAT
SERIES_ANALYSIS_OUTPUT_FLAG_CNT = STAT
SERIES_ANALYSIS_OUTPUT_FLAG_CTS = STAT

SERIES_ANALYSIS_GRID = FULL
SERIES_ANALYSIS_BLOCK_SIZE = 1000000

SERIES_ANALYSIS_IS_PAIRED = True

SERIES_ANALYSIS_STAT_LIST =TOTAL, FBAR, OBAR, ME, MAE, RMSE, ANOM_CORR, PR_CORR
SERIES_ANALYSIS_CTS_LIST = BASER, CSI, GSS
SERIES_ANALYSIS_CNT_LIST =TOTAL, FBAR, OBAR, ME, MAE, RMSE, ANOM_CORR, PR_CORR, BCMSE,MAD,E10,E25,E50,E75,E90,KT_CORR,ESTDEV,SP_CORR

# End of [config] section and start of [dir] section
[dir]

# directory containing forecast input to SeriesAnalysis
FCST_SERIES_ANALYSIS_INPUT_DIR = {ENV[COMINgefs]}

# directory containing observation input to SeriesAnalysis
OBS_SERIES_ANALYSIS_INPUT_DIR = {ENV[DCOMIN]}

# directory to write output from SeriesAnalysis
SERIES_ANALYSIS_OUTPUT_DIR = {finalstat}/{ENV[STEP]}/{ENV[OBTTYPE]}

LOG_DIR = {OUTPUT_BASE}/logs/{ENV[COMPONENT]}


[filename_templates]
FCST_SERIES_ANALYSIS_INPUT_TEMPLATE = {MODEL}.{lead?fmt=%Y%m%d}/{ENV[mdl_cyc]}/chem/pgrb2ap25/{MODEL}.chem.t{ENV[mdl_cyc]}z.a2d_0p25.f{lead?fmt=%3H}.grib2

OBS_SERIES_ANALYSIS_INPUT_TEMPLATE = {valid?fmt=%Y%m%d}/validation_data/aq/{ENV[OBTTYPE]}/ABI-L3-AOD_GEFS_{valid?fmt=%Y%m%d_%H%M%S}.nc
 
# Optional subdirectories relative to SERIES_ANALYSIS_OUTPUT_DIR to write output from SeriesAnalysis
SERIES_ANALYSIS_OUTPUT_TEMPLATE = {ENV[RUN]}.{valid?fmt=%Y%m%d_%H%M%S}.nc
